{
    "contents" : "# word counting\nrm(list = ls())\n\nwd <- 'C:/Users/KLN/some_r'\nsetwd(wd)\nsource('util_fun.R')\nload('kjv.RData')\n\n### word frequencies\n\n# build word (raw) frequency table\ntext.freqs.t <- table(tokens.fil.v)\nhead(text.freqs.t)\n# sort list\ntext.freqs.t <- sort(text.freqs.t, decreasing = T)\ntext.freqs.t[1:20]\n\n# relative frequency table\ntext.freqsrel.t <-  text.freqs.t/sum(text.freqs.t)*100\ntext.freqsrel.t[1:20]\n# plot word distribution\nn <- length(text.freqs.t)\nx <- 1:n\ny <- as.numeric(text.freqs.t[1:n])\nplot(x,y, main = \"KJV meets Zipf's law\", log='xy', xlab ='Rank', ylab ='Frequency', axes = T)\n\n\n### individual word frequencies\nlibrary(SnowballC)\npositive <- wordStem(c('laughter','happiness','love','laughed','excellent'),'english') # terms from labMT\nnegative <- wordStem(c('murder','death','kill','died','war'),'english')\nsentiments.dt <- data.frame(positive = rep(0,5), negative = rep(0,5))\nfor (w in 1:length(positive)){\n  sentiments.dt[w,1] <- text.freqs.t[positive[w]]\n  sentiments.dt[w,2] <- text.freqs.t[negative[w]]\n}\n\n## token distribution analysis\ntime.v <- seq(1,length(tokens.v),by = 1)# alternative time.v <- 1:length(tokens.v)\n# find occurrences of \nwar.v <- which(tokens.v == 'war')\nwar.count.v <- rep(NA,length(time.v))\nwar.count.v[war.v] <- 1\ndev.new()\nplot(war.count.v, main=\"Dispersion plot of 'war' in KJV\",\n     xlab=\"Narrative time\",ylab=\"war\",type=\"h\",ylim=c(0,1),yaxt='n')\n# function for distributional plot\ntoken.dist <- function(token,tokens){\n  t <- 1:length(tokens)\n  c <- rep(NA,length(time.v))\n  c[tokens == token] <- 1\n  plot(c, main=paste(\"Dispersion plot of\",token),\n       xlab=\"Narrative time\",ylab=token,type=\"h\",ylim=c(0,1),xaxt='n',yaxt='n')\n}\ndev.new()\npar(mfrow=c(2,1))\ntoken.dist('love',tokens.v)\nl <- which(tokens.v == 'gospel'); l <- l[1];# identify new testament\nabline(v=l,col = 'red',lwd = 2)\ntoken.dist('war',tokens.v)\nabline(v=l,col = 'red',lwd = 2)\n\n### word counting with tm\nlibrary(tm)\n\n## building a document-term matrix \nload('kjv.RData')\n# word frequencies\nbooks.dtm <- DocumentTermMatrix(books.cor, control = list(minWordLength = 2))\n\n# tf-idf weighting\n#books.tfidf.dtm <- DocumentTermMatrix(books.cor, control = list(weighting = function(x)weightTfIdf(x,normalize = FALSE)))\nbooks.tfidf.dtm <- DocumentTermMatrix(books.cor, control = list(weighting = weightTfIdf , minWordLength = 2))\n?DocumentTermMatrix\n\n# including n-grams\nlibrary(RWeka)\nhelp(package = 'RWeka')\nbooks.ng.dtm <- DocumentTermMatrix(books.cor, control=list(tokenize = NGramTokenizer))\n\n\n# explore dtm\ndim(books.dtm)\nbooks.dtm$dimnames$Docs\ninspect(books.dtm[1,])\ninspect(books.dtm[,1])\ninspect(books.dtm[1:5, 1000:1005])\n\n# build sentiment matrix for initial books in Old Testament and New Testament\nmetadata.dt <- read.csv('kjv_metadata.csv',header = TRUE)\npenta <- books.dtm$dimnames$Docs[which(metadata.dt[,3] == 'pentateuch')]\nevang <- books.dtm$dimnames$Docs[which(metadata.dt[,3] == 'historical' & metadata.dt[,2] == 'new')]\nsentiment.mat <- inspect(books.dtm[c(penta,evang),c(positive,negative)])\n\n# find frequent terms\nfindFreqTerms(books.dtm, lowfreq = 500, highfreq = Inf)\n\nclass(books.dtm)\ndtm.mat <- as.matrix(books.dtm)\n",
    "created" : 1466581502467.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "148230017",
    "id" : "2D9029F6",
    "lastKnownWriteTime" : 1469608429,
    "path" : "~/courses/au_summer_university/summer_u2016/classes/tutorials/counting_words.R",
    "project_path" : "counting_words.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}