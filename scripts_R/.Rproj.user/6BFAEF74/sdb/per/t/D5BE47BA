{
    "contents" : "rm(list = ls())\nwd <- 'C:/Users/KLN/some_r'\nsetwd(wd)\n\n\n\n\nlibrary(XML)\ndoc <- xmlParse(\"a.xml\")\nxmlToDataFrame(\n  getNodeSet(doc, \"//value\"),\n  colClasses=c(\"character\",\"numeric\")\n)\n\n\ntitle <- xmlToDataFrame(\n  getNodeSet(doc, \"//title\"),\n  colClasses=c(\"character\")\n)\n\ntitle <- as.character(title$text)\n\ntest <- title$text[2]\nas.character(test)\n\n\n##########\n\ndoc2 <- xmlParse(\"b.xml\")\nbody <- xmlToDataFrame(\n  getNodeSet(doc2, \"//title\"),\n  colClasses=c(\"character\")\n)\n\n###\n\ndoc <- xmlTreeParse(\"lb12044.xml\", useInternalNodes=TRUE)\nxmlGetAttr(doc, \"text\")\n\n\n\nbodyToDF <- function(x){\n  scenenum <- xmlGetAttr(x, \"n\")\n  scenetype <- xmlGetAttr(x, \"type\")\n  sp <- xpathApply(x, 'sp', function(sp) {\n    who <- xmlGetAttr(sp, \"who\")\n    if(is.null(who))\n      who <- NA\n    line_num <- xpathSApply(sp, 'l', function(l) { xmlGetAttr(l,\"n\")})\n    linecontent = xpathSApply(sp, 'l', function(l) { xmlValue(l,\"n\")})\n    data.frame( scenenum, scenetype, who, line_num, linecontent)\n  })\n  do.call(rbind, sp)  \n}\n\nres <- xpathApply(doc, '//div1', bodyToDF)\ntemp.df <- do.call(rbind, res)\n###########################################\n\nlibrary('XML')\nlibrary('plyr')\n\nxmlfile <- xmlParse(\"lb12044.xml\")\nclass(xmlfile)\nxmltop = xmlRoot(xmlfile)# content of root\nxmlName(xmltop) #give name of node\nxmlSize(xmltop) #how many children in node\n\n\n# have a look at the content of the first child entry\nxmlName(xmltop[[1]]) #name of root's children\nxmltop[[1]]\n# have a look at the content of the 2nd child entry\nxmlName(xmltop[[2]]) #name of root's children\nxmltop[[2]]\n\n\n#Root Node's children\nxmlSize(xmltop[[2]]) #number of nodes in each child\nxmlSApply(xmltop[[2]], xmlName) #name(s)\nxmlSApply(xmltop[[2]], xmlAttrs) #attribute(s)\nxmlSApply(xmltop[[2]], xmlSize) #size\n\n\n#subnodes of 2nd child\nxmltop[[2]][[1]]# text\nxmltop[[2]][[2]]# body\n\nxmlSApply(xmltop[[2]][[1]][[2]][[1]], xmlName) #name(s)\n\nxmlSApply(xmltop[['text']][['body']][['div1']][['div2']], xmlName)\nxmlSApply(xmltop[['text']][['body']][['div1']][['div2']], xmlAttrs)\n\nxmltop[['text']][['body']][['div1']][['div2']][['p']][['text']]\n\ndoc <- ldply(xmlToList(\"lb12044.xml\"))\n\n\ndoc <-xmlToList(xmlfile)\ndoc$text$body$div1$div2$p$text\n\n#############\ntt = \n  '<x>\n     <a>text</a>\n     <b foo=\"1\"/>\n     <c bar=\"me\">\n        <d>a phrase</d>\n     </c>\n  </x>'\n\ndoc = xmlParse(tt)\n\nxmlToList(doc)\n############################\nlibrary(XML)\n# Save the URL of the xml file in a variable\nxml.url <- \"http://www.w3schools.com/xml/plant_catalog.xml\"\nxmlfile <- xmlTreeParse(xml.url)\nclass(xmlfile)\n# Use the xmlRoot-function to access the top node\nxmltop = xmlRoot(xmlfile)\n# have a look at the XML-code of the first subnodes:\nprint(xmltop)[1:2]\n\n# To extract the XML-values from the document, use xmlSApply:\nplantcat <- xmlSApply(xmltop, function(x) xmlSApply(x, xmlValue))\n# Finally, get the data in a data-frame and have a look at the first rows and columns\nplantcat_df <- data.frame(t(plantcat),row.names=NULL)\nplantcat_df[1:5,1:4]\n##########\nlibrary(XML)\nxmlname <- \"lb12044.xml\"\nxmlfile <- xmlTreeParse(xmlname, useInternalNode=TRUE)\nclass(xmlfile)\nxmltop = xmlRoot(xmlfile)\nprint(xmltop)[1]\ntextcat <- xmlSApply(xmltop, function(x) xmlSApply(x, xmlValue))\ntextcat.df <- data.frame(t(textcat),row.names=NULL)\ntext.v <- textcat.df$text$text[[2]]\nclass(text.v)\nlength(text.v)\ntext.v <- gsub(\"\\n\",\" \",text.v)# remove new line\ntext.v <- tolower(text.v)\ntokens.v <- strsplit(text.v, '\\\\W')\nidx <- which(tokens.v !=\"\")\ntokens.v <- tokens.v[idx]\ntokens.v[[1]][1:100]\n\n",
    "created" : 1467192428931.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1818509639",
    "id" : "D5BE47BA",
    "lastKnownWriteTime" : 1467212019,
    "path" : "C:/Users/KLN/some_r/xml_tutorial.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}