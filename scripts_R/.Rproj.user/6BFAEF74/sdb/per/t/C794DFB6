{
    "contents" : "### unsupervised learning: clustering\nrm(list = ls())\nwd <- 'C:/Users/KLN/some_r'\nsetwd(wd)\nsource('util_fun.R')\nlibrary(tm)\nlibrary(RWeka)\n\n\n\n### partioning words in sentences ~ association mining\n##\nmatt.v <- paste(scan('data/kjv_books/Matthew.txt', what = 'character', sep='\\n', encoding = 'UTF-8'), collapse = \" \")\n# sentence tokenizer\ntoken_sent <- function(text, lang = \"en\") {\n  sentannotator <- openNLP::Maxent_Sent_Token_Annotator(language = lang)\n  text <- NLP::as.String(text)# convert to string\n  sentbound <- NLP::annotate(text, sentannotator)\n  sentences <- text[sentbound]# extract sentences\n  return(sentences)# return sentences\n}\nsent.v <- token_sent(matt.v)\nsent.cor <- Corpus(VectorSource(sent.v))\nsent.cor <- tm_map(sent.cor, PlainTextDocument)\nsent.cor <- tm_map(sent.cor, content_transformer(tolower))\nsent.cor <- tm_map(sent.cor, removePunctuation)\nsent.cor <- tm_map(sent.cor, removeNumbers)\nsent.cor <- tm_map(sent.cor, removeWords, stopwords(\"english\"))\nsent.cor <- tm_map(sent.cor, stripWhitespace)\n# load keyword types\nload('matt_entities.RData')\nprint(person.v)\n# make dictionary\ndict.l = tolower(c('Christ','God','Jesus','John','John Baptist','Lord','Mary','Mary Magdalene', 'Moses','Satan','Spirit'))\n# build sentence-term matric with dictionary and n-grams tokenization\nsent.mat <- as.matrix(TermDocumentMatrix(sent.cor, control=list(dictionary = dict.l, tokenize = NGramTokenizer)) )\nhead(sent.mat)\n# prune matrix (at least one keyword in sentence)\nsent.mat <- sent.mat[,which(colSums(sent.mat) > 0)]\n\n## partional prototype-based exclusive clustering: k-means with euclidean distance*\n# for reproducibility \nset.seed(1234)\n# length-normalize the vectors (Manning, p. 121)\nnorm_eucl <- function(m) m/apply(m, MARGIN=1, FUN=function(x) sum(x^2)^.5)\nsentnorm.mat <- norm_eucl(sent.mat)\n\n# k number of groups\nk = 3\nsent.cl <- kmeans(sentnorm.mat, k)\n# cluster object\nsent.cl\n# classification\nsent.cl$cluster\n# goodness of the classification\nas.numeric(sent.cl[6])/as.numeric(sent.cl[3])# %%% BSS/TSS\nplot(prcomp(sentnorm.mat)$x, col=sent.cl$cl)\ntext(prcomp(sentnorm.mat)$x[,1],prcomp(sentnorm.mat)$x[,2],rownames(sentnorm.mat))\n# plot clusters using the first 2 principal components\nx <- prcomp(sentnorm.mat)$x[,1]; y <- prcomp(sentnorm.mat)$x[,2]; names <- capname(rownames(sentnorm.mat))\ncols = as.double(sent.cl$cluster)\nplot(x, y, type='p', pch=20, col=cols, cex = 2,xlab='Comp.1', ylab='Comp.2', xlim = c(-.4, 1), ylim = c(-.7,.5))\ntext(x, y, names, col=cols, cex=.8, pos=4)\n\n## agglomerative hierarchical overlapping clustering\nlibrary(proxy)\nsent.dist <- dist(sentnorm.mat, method=\"cosine\")# use dot product and euclid dist as length normalizer\nsent.hc <- hclust(sent.dist)\n\n\n\n# plot with dendrogram\nplot(sent.hc)\ncl <- cutree(sent.hc, 3) # prune tree in three paths \nprint(cl)\n\n### validation\nlibrary('clValid')\n# internal\nintern <- clValid(sent.mat, 2:6, clMethods=c(\"hierarchical\",\"kmeans\"),validation=\"internal\")\nsummary(intern)\noptimalScores(intern)# only view optimal values\nop <- par(no.readonly=TRUE)\npar(mfrow=c(2,2),mar=c(4,4,3,1))\nplot(intern, legend=FALSE)\nplot(nClusters(intern),measures(intern,\"Dunn\")[,,1],type=\"n\",axes=F, xlab=\"\",ylab=\"\")\nlegend(\"center\", clusterMethods(intern), col=1:9, lty=1:9, pch=paste(1:9))\npar(op)\n# stability\nstab <- clValid(sent.mat, 2:6, clMethods=c(\"hierarchical\",\"kmeans\"),validation=\"stability\")\noptimalScores(stab)\npar(mfrow=c(2,2),mar=c(4,4,3,1))\nplot(stab, measure=c(\"APN\",\"AD\",\"ADM\"),legend=FALSE)\nplot(nClusters(stab),measures(stab,\"APN\")[,,1],type=\"n\",axes=F,xlab=\"\",ylab=\"\")\nlegend(\"center\", clusterMethods(stab), col=1:9, lty=1:9, pch=paste(1:9))\npar(op)\n\n### scaling to document clustering with tm\nload('kjv.RData')\n\n# extract NT subcorpus using metadata\ncollection.v <- meta(books.cor, type = 'local',\"collection\")\nbooks.cor <- books.cor[collection.v == 'new']\nclass.v <- unlist(meta(books.cor, type = 'local',\"class\"))\n\n# build document term matrix\nbooks.dtm <- DocumentTermMatrix(books.cor)\nprint(books.dtm)\n# remove sparse terms by setting minimum representation in documents\ndocsparse <- function(mindocs,dtm){\n  n = length(row.names(dtm))\n  sparse <- 1 - mindocs/n;\n  dtmreduce <- removeSparseTerms(dtm, sparse)\n  return(dtmreduce)\n}\nbooks.dtm <- docsparse(2,books.dtm)\nprint(books.dtm)\n# transform to matrix\nbooks.mat <- as.matrix(books.dtm)\n\n## kmeans\nbooks.mat <- norm_eucl(books.mat)\n\n# graphical approach to determining number of clusters: plot of total within-groups sums of squares against number of k and find knee\nwssplot <- function(data, nc=15, seed=1234){\n  wss <- (nrow(data)-1)*sum(apply(data,2,var))\n  for (i in 2:nc){\n    set.seed(seed)\n    wss[i] <- sum(kmeans(data, centers=i)$withinss)}\n  plot(1:nc, wss, type=\"b\", xlab=\"Number of Clusters\",\n       ylab=\"Within groups sum of squares\")}\nmax_k = 10\ndev.new()\nwssplot(books.mat,nc = max_k) \n\n# 3 sub-groups or clusters\nk = 3\nbooks.cl <- kmeans(books.mat, k)\n# classification\nbooks.cl$cluster\nx <- prcomp(books.mat)$x[,1]; y <- prcomp(books.mat)$x[,2]; names <- capname(rownames(books.mat))\ncols = as.double(books.cl$cluster)\ndev.new()\npar(mfrow = c(1,2))\nplot(x, y, type='p', pch=20, col=cols, cex = 2,xlab='Comp.1', ylab='Comp.2', xlim = c(-.4,.7),ylim = c(-.7,.3))\ntext(x, y, names, col=cols, cex=.8, pos=4)\n# add metadata\nplot(x, y, type='p', pch=20, col=cols, cex = 2,xlab='Comp.1', ylab='Comp.2',xlim = c(-.4,.7),ylim = c(-.7,.3))\ntext(x, y, class.v, col=cols, cex=.8, pos=4)\n\n\n## agglomerative hierarchical overlapping clustering\nlibrary(proxy)\nbooks.dist <- dist(books.mat, method=\"cosine\")# use dot product and euclid dist as length normalizer\nbooks.hc <- hclust(books.dist, method=\"average\")\n# plot with dendrogram\ndev.new()\nplot(books.hc)\nprint(cl)\n# same level labels\nplot(books.hc, hang = -1)\n# changing shape by using dendrogram object\nbooks.den <- as.dendrogram(books.hc)\nplot(books.den,'triangle')\nlibrary(ape)\ndev.new()\nplot(as.phylo(books.hc), cex = 0.9)\ndev.new()\nplot(as.phylo(books.hc), type = \"unrooted\", cex = 1)\ndev.new()\nplot(as.phylo(books.hc), type = \"fan\")",
    "created" : 1468219839109.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1116357982",
    "id" : "C794DFB6",
    "lastKnownWriteTime" : 1469795359,
    "path" : "~/courses/au_summer_university/summer_u2016/classes/tutorials/clustering.R",
    "project_path" : "clustering.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "type" : "r_source"
}